given an sorted rotated array.. and k i.e sum return if present else false

Input: arr[] = {11, 15, 6, 8, 9, 10}, X = 16
Output: true

1. brute force : o(n2)
2. using unordered set... 
    /*if a = b - x in set: 
             return "true" 
      else insert into set */ for all 0 t n-1
      
    if not found return false
    
3. using two pointer technique
    l is left, r is right
bool pairInSortedRotated(int arr[], int n, int x)
{
	int i;
	for (i = 0; i < n - 1; i++)
		if (arr[i] > arr[i + 1])
			break;
	int l = (i + 1) % n;
	int r = i;
	while (l != r) {
		if (arr[l] + arr[r] == x)
			return true;
		if (arr[l] + arr[r] < x)
			l = (l + 1) % n;
		else
			r = (n + r - 1) % n;
	}
	return false;
}

    
